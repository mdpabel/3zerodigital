'use client';

import { motion, AnimatePresence } from 'framer-motion';
import {
  Shield,
  AlertTriangle,
  Zap,
  Clock,
  CheckCircle,
  X,
  Phone,
  MessageSquare,
  ArrowRight,
  Sparkles,
  Award,
  Users,
  Star,
  Database,
  Lock,
  Search,
  RefreshCw,
  Eye,
  FileCheck,
} from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { cn } from '@/lib/utils';
import { useState } from 'react';
import ComponentWrapper from '@/components/common/component-wrapper';

// Malware removal specific pricing data
const malwareRemovalPlans = [
  {
    id: 'emergency',
    name: 'Emergency Cleanup',
    description: 'Immediate malware removal for critical situations',
    icon: AlertTriangle,
    color: 'from-red-600 to-red-700',
    bgGradient: 'from-red-500/10 via-red-600/5 to-orange-500/10',
    price: 199,
    originalPrice: 299,
    urgent: true,
    popular: false,
    responseTime: '< 2 hours',
    completionTime: '4-8 hours',
    features: {
      included: [
        'Immediate malware scan',
        'Basic malware removal',
        'Site functionality restoration',
        'Basic security hardening',
        '48-hour monitoring',
        'Email support',
      ],
      excluded: [
        'Blacklist removal',
        'Advanced security audit',
        'Performance optimization',
        'Phone support',
        'Extended monitoring',
      ],
    },
    guarantees: [
      'Same-day response',
      'Basic malware removal',
      '48-hour post-cleanup monitoring',
    ],
    bestFor: 'Small websites with basic malware infections',
  },
  {
    id: 'professional',
    name: 'Complete Cleanup',
    description: 'Comprehensive malware removal with security hardening',
    icon: Shield,
    color: 'from-emerald-600 to-emerald-700',
    bgGradient: 'from-emerald-500/10 via-emerald-600/5 to-green-500/10',
    price: 399,
    originalPrice: 599,
    urgent: false,
    popular: true,
    responseTime: '< 1 hour',
    completionTime: '6-12 hours',
    features: {
      included: [
        'Deep malware scan & removal',
        'Security vulnerability fixes',
        'Blacklist removal service',
        'Security hardening',
        'Clean backup restoration',
        '7-day monitoring',
        'Performance optimization',
        'Priority phone support',
        'Security report',
      ],
      excluded: [
        'Custom development',
        'Content recreation',
        'Extended monitoring beyond 7 days',
      ],
    },
    guarantees: [
      '100% malware removal',
      'Google blacklist removal',
      '7-day reinfection protection',
      'Security audit report',
    ],
    bestFor: 'Business websites requiring complete security restoration',
  },
  {
    id: 'enterprise',
    name: 'Premium Security Recovery',
    description: 'White-glove malware removal with ongoing protection',
    icon: Award,
    color: 'from-purple-600 to-purple-700',
    bgGradient: 'from-purple-500/10 via-purple-600/5 to-pink-500/10',
    price: 799,
    originalPrice: 1199,
    urgent: false,
    popular: false,
    responseTime: '< 30 minutes',
    completionTime: '8-24 hours',
    features: {
      included: [
        'Forensic malware analysis',
        'Complete security overhaul',
        'Advanced blacklist removal',
        'Custom security implementation',
        'Multiple backup restoration options',
        '30-day monitoring & protection',
        'Performance & SEO recovery',
        'Dedicated security specialist',
        'Detailed forensic report',
        '24/7 emergency hotline',
        'Content damage assessment',
        'Reputation management support',
      ],
      excluded: [],
    },
    guarantees: [
      '100% malware elimination',
      'Complete blacklist removal',
      '30-day reinfection guarantee',
      'Forensic analysis report',
      'Dedicated support specialist',
    ],
    bestFor: 'Enterprise websites and e-commerce platforms',
  },
];

// Additional services that can be added
const addOnServices = [
  {
    id: 'ssl-install',
    name: 'SSL Certificate Installation',
    price: 99,
    icon: Lock,
    description: 'Secure your site with proper SSL configuration',
  },
  {
    id: 'seo-recovery',
    name: 'SEO Impact Recovery',
    price: 299,
    icon: Search,
    description: 'Restore search rankings after malware cleanup',
  },
  {
    id: 'content-recovery',
    name: 'Content Recovery Service',
    price: 199,
    icon: FileCheck,
    description: 'Restore damaged or corrupted content',
  },
  {
    id: 'ongoing-monitoring',
    name: 'Extended Monitoring (3 months)',
    price: 149,
    icon: Eye,
    description: 'Continuous security monitoring and protection',
  },
];

const MalwareRemovalPricing = () => {
  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);
  const [selectedAddOns, setSelectedAddOns] = useState<string[]>([]);

  const handlePlanSelect = (planId: string) => {
    setSelectedPlan(planId);
  };

  const handleAddOnToggle = (addOnId: string) => {
    setSelectedAddOns((prev) =>
      prev.includes(addOnId)
        ? prev.filter((id) => id !== addOnId)
        : [...prev, addOnId],
    );
  };

  const calculateTotal = () => {
    const selectedPlanData = malwareRemovalPlans.find(
      (plan) => plan.id === selectedPlan,
    );
    const planPrice = selectedPlanData?.price || 0;
    const addOnPrice = selectedAddOns.reduce((total, addOnId) => {
      const addOn = addOnServices.find((service) => service.id === addOnId);
      return total + (addOn?.price || 0);
    }, 0);
    return planPrice + addOnPrice;
  };

  return (
    <section className='relative py-16 md:py-24 overflow-hidden'>
      <ComponentWrapper>
        <div className='relative mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl container'>
          {/* Header */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
            className='mb-16 text-center'>
            <Badge className='bg-red-100 hover:bg-red-100 dark:bg-red-900/20 dark:hover:bg-red-900/20 mb-6 px-4 py-2 border border-red-200/50 dark:border-red-800/50 font-medium text-red-800 dark:text-red-300 text-sm'>
              <AlertTriangle className='mr-2 w-4 h-4' />
              Emergency Security Service
            </Badge>

            <h1 className='mb-4 font-bold text-3xl md:text-4xl lg:text-5xl'>
              <span className='bg-clip-text bg-gradient-to-r from-slate-900 dark:from-white via-red-900 dark:via-red-100 to-slate-900 dark:to-white text-transparent'>
                WordPress Malware Removal
              </span>
            </h1>

            <p className='mx-auto mb-8 max-w-3xl text-slate-600 dark:text-slate-300 text-lg md:text-xl'>
              Professional malware removal service with{' '}
              <strong>zero compromise guarantee</strong>. We'll clean your
              infected website and restore it to full functionality.
            </p>

            {/* Urgency Indicators */}
            <div className='flex flex-wrap justify-center items-center gap-6 mb-8'>
              <div className='flex items-center gap-2'>
                <Clock className='w-5 h-5 text-red-600' />
                <span className='text-slate-600 dark:text-slate-300 text-sm'>
                  Response within 2 hours
                </span>
              </div>
              <div className='flex items-center gap-2'>
                <Shield className='w-5 h-5 text-green-600' />
                <span className='text-slate-600 dark:text-slate-300 text-sm'>
                  100% malware removal guarantee
                </span>
              </div>
              <div className='flex items-center gap-2'>
                <Award className='w-5 h-5 text-blue-600' />
                <span className='text-slate-600 dark:text-slate-300 text-sm'>
                  99.8% success rate
                </span>
              </div>
            </div>
          </motion.div>

          {/* Pricing Plans */}
          <div className='gap-8 grid grid-cols-1 lg:grid-cols-3 mb-16'>
            {malwareRemovalPlans.map((plan, index) => (
              <motion.div
                key={plan.id}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                whileHover={{ y: -8 }}
                onClick={() => handlePlanSelect(plan.id)}
                className={cn(
                  'relative bg-white/70 dark:bg-slate-800/70 backdrop-blur-md rounded-3xl p-8 border-2 border-slate-200/50 dark:border-slate-700/50 shadow-xl overflow-hidden cursor-pointer transition-all duration-300',
                  plan.popular &&
                    'ring-2 ring-emerald-500/50 shadow-2xl transform scale-105',
                  selectedPlan === plan.id &&
                    'ring-2 ring-blue-500/50 border-blue-500/50',
                  plan.urgent && 'ring-2 ring-red-500/50',
                )}>
                {/* Background Gradient */}
                <div
                  className={cn(
                    'absolute inset-0 bg-gradient-to-br opacity-30 dark:opacity-20',
                    plan.bgGradient,
                  )}
                />

                {/* Popular Badge */}
                {plan.popular && (
                  <div className='top-0 left-1/2 absolute -translate-x-1/2 -translate-y-1/2 transform'>
                    <Badge className='bg-gradient-to-r from-emerald-600 to-green-600 px-4 py-1 text-white'>
                      <Star className='mr-1 w-3 h-3' />
                      Most Popular
                    </Badge>
                  </div>
                )}

                {/* Urgent Badge */}
                {plan.urgent && (
                  <div className='top-4 right-4 absolute'>
                    <Badge className='bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-300 animate-pulse'>
                      <Zap className='mr-1 w-3 h-3' />
                      Emergency
                    </Badge>
                  </div>
                )}

                {/* Selection Indicator */}
                {selectedPlan === plan.id && (
                  <div className='top-4 left-4 absolute'>
                    <CheckCircle className='w-6 h-6 text-blue-600' />
                  </div>
                )}

                <div className='relative'>
                  {/* Plan Header */}
                  <div className='mb-6 text-center'>
                    <div
                      className={cn(
                        'inline-flex items-center justify-center w-16 h-16 rounded-2xl bg-gradient-to-r mb-4',
                        plan.color,
                      )}>
                      <plan.icon className='w-8 h-8 text-white' />
                    </div>

                    <h3 className='mb-2 font-bold text-slate-900 dark:text-white text-2xl'>
                      {plan.name}
                    </h3>
                    <p className='text-slate-600 dark:text-slate-300 text-sm'>
                      {plan.description}
                    </p>
                  </div>

                  {/* Pricing */}
                  <div className='mb-6 text-center'>
                    <div className='flex justify-center items-baseline gap-2 mb-2'>
                      <span className='font-bold text-slate-900 dark:text-white text-4xl md:text-5xl'>
                        ${plan.price}
                      </span>
                      {plan.originalPrice > plan.price && (
                        <span className='text-slate-500 dark:text-slate-400 text-lg line-through'>
                          ${plan.originalPrice}
                        </span>
                      )}
                    </div>

                    {plan.originalPrice > plan.price && (
                      <Badge className='bg-green-100 dark:bg-green-900/20 mb-2 text-green-800 dark:text-green-300'>
                        Save ${plan.originalPrice - plan.price}
                      </Badge>
                    )}

                    <p className='text-slate-500 dark:text-slate-400 text-sm'>
                      {plan.bestFor}
                    </p>
                  </div>

                  {/* Response Time */}
                  <div className='flex justify-between items-center bg-slate-50/50 dark:bg-slate-900/50 mb-6 p-3 border border-slate-200/30 dark:border-slate-700/30 rounded-lg'>
                    <div className='text-center'>
                      <div className='text-slate-500 dark:text-slate-400 text-xs'>
                        Response Time
                      </div>
                      <div className='font-bold text-slate-900 dark:text-white text-sm'>
                        {plan.responseTime}
                      </div>
                    </div>
                    <div className='text-center'>
                      <div className='text-slate-500 dark:text-slate-400 text-xs'>
                        Completion
                      </div>
                      <div className='font-bold text-slate-900 dark:text-white text-sm'>
                        {plan.completionTime}
                      </div>
                    </div>
                  </div>

                  {/* Features */}
                  <div className='space-y-4 mb-6'>
                    <div>
                      <h4 className='mb-3 font-semibold text-slate-900 dark:text-white text-sm'>
                        What's Included
                      </h4>
                      <div className='space-y-2'>
                        {plan.features.included.map((feature, idx) => (
                          <div key={idx} className='flex items-start gap-2'>
                            <CheckCircle className='flex-shrink-0 mt-0.5 w-4 h-4 text-green-600 dark:text-green-400' />
                            <span className='text-slate-600 dark:text-slate-300 text-xs'>
                              {feature}
                            </span>
                          </div>
                        ))}
                      </div>
                    </div>

                    {plan.features.excluded.length > 0 && (
                      <div>
                        <h4 className='mb-2 font-semibold text-slate-500 dark:text-slate-400 text-xs'>
                          Not Included
                        </h4>
                        <div className='space-y-1'>
                          {plan.features.excluded.map((feature, idx) => (
                            <div key={idx} className='flex items-start gap-2'>
                              <X className='flex-shrink-0 mt-0.5 w-3 h-3 text-slate-400' />
                              <span className='text-slate-500 dark:text-slate-400 text-xs'>
                                {feature}
                              </span>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>

                  {/* Guarantees */}
                  <div className='bg-green-50/50 dark:bg-green-950/20 mb-6 p-4 border border-green-200/30 dark:border-green-800/30 rounded-lg'>
                    <h4 className='mb-2 font-semibold text-green-800 dark:text-green-300 text-sm'>
                      Our Guarantee
                    </h4>
                    <div className='space-y-1'>
                      {plan.guarantees.map((guarantee, idx) => (
                        <div key={idx} className='flex items-center gap-2'>
                          <Shield className='w-3 h-3 text-green-600' />
                          <span className='text-green-700 dark:text-green-300 text-xs'>
                            {guarantee}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* CTA */}
                  <div className='space-y-3'>
                    <Button
                      className={cn(
                        'w-full py-6 text-white border-0 bg-gradient-to-r shadow-lg hover:shadow-xl transition-all duration-300',
                        plan.color,
                        selectedPlan === plan.id &&
                          'ring-2 ring-offset-2 ring-blue-500',
                      )}
                      size='lg'>
                      {plan.urgent ? 'Get Emergency Help' : 'Choose This Plan'}
                      <ArrowRight className='ml-2 w-5 h-5' />
                    </Button>

                    <div className='flex gap-2'>
                      <Button variant='outline' size='sm' className='flex-1'>
                        <Phone className='mr-1 w-4 h-4' />
                        Call Now
                      </Button>
                      <Button variant='outline' size='sm' className='flex-1'>
                        <MessageSquare className='mr-1 w-4 h-4' />
                        Live Chat
                      </Button>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>

          {/* Add-on Services */}
          <AnimatePresence>
            {selectedPlan && (
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                transition={{ duration: 0.6 }}
                className='bg-white/70 dark:bg-slate-800/70 backdrop-blur-md mb-16 p-8 border border-slate-200/50 dark:border-slate-700/50 rounded-2xl'>
                <h3 className='mb-6 font-bold text-slate-900 dark:text-white text-2xl'>
                  Additional Services
                </h3>
                <p className='mb-8 text-slate-600 dark:text-slate-300'>
                  Enhance your malware removal service with these additional
                  security measures
                </p>

                <div className='gap-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4'>
                  {addOnServices.map((service) => (
                    <motion.div
                      key={service.id}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={() => handleAddOnToggle(service.id)}
                      className={cn(
                        'cursor-pointer p-6 rounded-xl border-2 transition-all duration-300',
                        selectedAddOns.includes(service.id)
                          ? 'bg-blue-50 dark:bg-blue-950/20 border-blue-500'
                          : 'bg-white/50 dark:bg-slate-800/50 border-slate-200 dark:border-slate-700 hover:border-slate-300',
                      )}>
                      <div className='flex justify-between items-start mb-3'>
                        <service.icon
                          className={cn(
                            'w-6 h-6',
                            selectedAddOns.includes(service.id)
                              ? 'text-blue-600'
                              : 'text-slate-500',
                          )}
                        />

                        {selectedAddOns.includes(service.id) && (
                          <CheckCircle className='w-5 h-5 text-blue-600' />
                        )}
                      </div>

                      <h4 className='mb-2 font-semibold text-slate-900 dark:text-white text-sm'>
                        {service.name}
                      </h4>
                      <p className='mb-3 text-slate-600 dark:text-slate-300 text-xs'>
                        {service.description}
                      </p>
                      <p className='font-bold text-blue-600'>
                        +${service.price}
                      </p>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            )}
          </AnimatePresence>

          {/* Order Summary */}
          <AnimatePresence>
            {selectedPlan && (
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                transition={{ duration: 0.6 }}
                className='bg-gradient-to-r from-blue-50 dark:from-blue-950/20 to-purple-50 dark:to-purple-950/20 p-8 border border-blue-200/50 dark:border-blue-800/50 rounded-2xl'>
                <div className='flex md:flex-row flex-col justify-between items-start md:items-center gap-6'>
                  <div>
                    <h3 className='mb-2 font-bold text-slate-900 dark:text-white text-2xl'>
                      Order Summary
                    </h3>
                    <div className='space-y-1 text-sm'>
                      <div className='text-slate-600 dark:text-slate-300'>
                        Selected Plan:{' '}
                        {
                          malwareRemovalPlans.find((p) => p.id === selectedPlan)
                            ?.name
                        }
                      </div>
                      {selectedAddOns.length > 0 && (
                        <div className='text-slate-600 dark:text-slate-300'>
                          Add-ons: {selectedAddOns.length} selected
                        </div>
                      )}
                    </div>
                  </div>

                  <div className='text-center md:text-right'>
                    <div className='mb-2 text-slate-500 text-sm'>
                      Total Cost
                    </div>
                    <div className='font-bold text-3xl md:text-4xl'>
                      <span className='bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600 text-transparent'>
                        ${calculateTotal().toLocaleString()}
                      </span>
                    </div>
                  </div>
                </div>

                <div className='flex sm:flex-row flex-col gap-4 mt-8'>
                  <Button
                    size='lg'
                    className='flex-1 bg-gradient-to-r from-red-600 to-orange-600 px-8 py-6 border-0 text-white'>
                    <AlertTriangle className='mr-2 w-5 h-5' />
                    Start Emergency Cleanup
                    <ArrowRight className='ml-2 w-5 h-5' />
                  </Button>

                  <Button
                    variant='outline'
                    size='lg'
                    className='bg-white/80 dark:bg-slate-800/80 px-8 py-6'>
                    <Phone className='mr-2 w-5 h-5' />
                    Call Expert: (555) 123-4567
                  </Button>
                </div>
              </motion.div>
            )}
          </AnimatePresence>

          {/* Trust Indicators */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.8 }}
            className='flex flex-wrap justify-center items-center gap-8 mt-16 text-center'>
            <div className='flex items-center gap-2'>
              <Shield className='w-5 h-5 text-green-600' />
              <span className='text-slate-600 dark:text-slate-300'>
                0 Vulnerabilities Left Behind
              </span>
            </div>

            <div className='flex items-center gap-2'>
              <Users className='w-5 h-5 text-blue-600' />
              <span className='text-slate-600 dark:text-slate-300'>
                2,500+ Sites Cleaned
              </span>
            </div>

            <div className='flex items-center gap-2'>
              <Clock className='w-5 h-5 text-purple-600' />
              <span className='text-slate-600 dark:text-slate-300'>
                Average 6-Hour Turnaround
              </span>
            </div>

            <div className='flex items-center gap-2'>
              <Award className='w-5 h-5 text-orange-600' />
              <span className='text-slate-600 dark:text-slate-300'>
                99.8% Success Rate
              </span>
            </div>
          </motion.div>
        </div>
      </ComponentWrapper>
    </section>
  );
};

export default MalwareRemovalPricing;
